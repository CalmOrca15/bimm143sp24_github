---
title: "Lab 9 - Halloween Candy Mini-Project"
author: "Shreyas Sankaranarayanan"
format: pdf
---

## Project Context

In this report we will be conducting and documenting our analysis on the candy-data csv provided by the new organization FiveThirtyEight. We will be trying to determine what exactly makes a candy popular.

In order to do so we must first import the data:
```{r}
candy <- "candy-data.csv"
candy.data <- read.csv(candy, row.names = 1)
head(candy.data)
```

## Data Analysis
> Q1. How many different candy types are in this dataset?

```{r}
diffcandy <- nrow(candy.data)
diffcandy
```


> Q2. How many fruity candy types are in the data set?

```{r}
sum(candy.data$fruity)
```
> Q3. What is your favorite candy in the dataset and what is it’s winpercent value?

```{r}

candy.data["Welch's Fruit Snacks",]$winpercent
```

> Q4. What is the winpercent value for “Kit Kat”?

```{r}
candy.data["Kit Kat",]$winpercent
```

> Q5. What is the winpercent value for “Tootsie Roll Snack Bars”?

```{r}
candy.data["Tootsie Roll Snack Bars",]$winpercent
```
Sidenote: Attempting to use skimr on the csv

```{r}
library(skimr)
skimcandy <- skim(candy.data)
skimcandy
min(candy.data$winpercent)
```

> Q6. Is there any variable/column that looks to be on a different scale to the majority of the other columns in the dataset?

When analyzing the skimcandy dataset which utilizes the `skimr` package to create a comprehensive view of the csv. This value seems to be the `winpercent` variable/column.

>Q7. What do you think a zero and one represent for the candy$chocolate column?

A zero represents that there is no chocolate in the corresponding candy while a one indicates there is

>Q8. Plot a histogram of winpercent values

```{r}
library(ggplot2)
ggplot(candy.data, aes(x = candy.data[,1], candy.data$winpercent))
hist(candy.data$winpercent)
hist(candy.data$winpercent)
```

> Q9. Is the distribution of winpercent values symmetrical?

No, it is not as seen above

> Q10.Is the center of the distribution above or below 50%?

Below 50%

> Q11. On average is chocolate candy higher or lower ranked than fruit candy?

```{r}
avgchocrank <- candy.data$winpercent[which(candy.data$chocolate == 1)]
avgfruitrank <- candy.data$winpercent[which(candy.data$fruity == 1)]
mean(avgchocrank)
mean(avgfruitrank)
```


> Q12. Is this difference statistically singificant?

```{r}
t.test(avgfruitrank,avgchocrank)

```

The p-value is significantly lower than 0.05 showing that the difference is statistically significant.

> Q13. What are the five least liked candy types in this set?

```{r}
head(candy.data[order(candy.data$winpercent, decreasing = FALSE),], n=5)
```

> Q14. What are the top 5 all time favorite candy types out of this set?

```{r}
head(candy.data[order(candy.data$winpercent, decreasing = TRUE),], n=5)
```
> Q15. Make a first barplot of candy ranking based on winpercent values.

```{r}
ggplot(candy.data) + 
  aes(candy.data$winpercent, rownames(candy.data)) +
  geom_col()
```

> Q16. This is quite ugly, use the reorder() function to get the bars sorted by winpercent?

```{r}
ggplot(candy.data) + 
  aes(winpercent, reorder(rownames(candy.data), winpercent)) +
  geom_col()
```

```{r}
ggsave("mybarplot.png", width = 10, height = 10)
```
Let's make it cleaner

```{r}
#| fig-height: 10
#| fig-width: 7

my_cols=rep("grey", nrow(candy.data))
my_cols[as.logical(candy.data$chocolate)] = "brown"
my_cols[as.logical(candy.data$bar)] = "dodgerblue"
my_cols[as.logical(candy.data$fruity)] = "hotpink"
ggplot(candy.data) + 
  aes(winpercent, reorder(rownames(candy.data), winpercent)) +
  geom_col(fill = my_cols)
```


> Q17. What is the worst ranked chocolate candy?

According to the plot above and the code below, Sixlets are the worst ranked chocolate candy
```{r}
wccand <- subset(candy.data, candy.data$chocolate == 1)
sortwccand <- wccand[order(wccand$winpercent, decreasing = FALSE),]

head(sortwccand, n=1)

```

> Q18. What is the best ranked fruity candy?

According to the plot above and the code below, Starburst are the best ranked fruity candy

> Q19. Which candy type is the highest ranked in terms of winpercent for the least money - i.e. offers the most bang for your buck?

Reese's Miniatures is highest ranked for winpercent but also is one of the cheapest. 

> Q20. What are the top 5 most expensive candy types in the dataset and of these which is the least popular?

NiklNip as it is the least like but the most expensive

```{r}
ord <- order(candy.data$pricepercent, decreasing = TRUE)
head( candy.data[ord,c(11,12)], n=5 )
```


```{r}
wccand2 <- subset(candy.data, candy.data$fruity == 1)
sortwccand <- wccand2[order(wccand2$winpercent, decreasing = TRUE),]

head(sortwccand, n=1)
```
```{r}
library(ggrepel)

# How about a plot of price vs win
ggplot(candy.data) +
  aes(winpercent, pricepercent, label=rownames(candy.data)) +
  geom_point(col=my_cols) + 
  geom_text_repel(col=my_cols, size=3.3, max.overlaps = 5)
```

## Analyszing correlation structure
```{r}
library(corrplot)
## corrplot 0.90 loaded
cij <- cor(candy.data                                                                                                                                                    )
corrplot(cij)
```
> Q22. Examining this plot what two variables are anti-correlated (i.e. have minus values)?

Chocolate and fruity are most anticorrelated
> Q23. Similarly, what two variables are most positively correlated?

Chocolate and winpercent are most positively correlated

## 6. Conducting Principle Component Analysis

We will perform a PCA of the candy. Key-question: Do we need to scale for PCA? Answer: Yes, as we have values that are rated on diff scales.

```{r}
pca <- prcomp(candy.data, scale = TRUE)
summary(pca)
pca$x
```

```{r}
plot(pca$x[,1], pca$x[,2], col = my_cols, pch = 16)
```

```{r}
my_data <- cbind(candy.data, pca$x[,1:3])
p <- ggplot(my_data) + 
        aes(x=PC1, y=PC2, 
            size=winpercent/100,  
            text=rownames(my_data),
            label=rownames(my_data)) +
        geom_point(col=my_cols)
p
```

Let's add repel to this:

```{r}
p + geom_text_repel(size=3.3, col=my_cols, max.overlaps = 7)  + 
  theme(legend.position = "none") +
  labs(title="Halloween Candy PCA Space",
       subtitle="Colored by type: chocolate bar (brown), chocolate other (blue), fruity (pink), other (grey)",
       caption="Data from 538")
```

```{r}
#| eval: false
library(plotly)
ggplotly(p)

```

How do the original variables contribute to our PCs? For this we look at the loading component of our results object i.e. `pca$rotation`:

```{r}
pca$rotation
```



```{r}
par(mar=c(8,4,2,2))
barplot(pca$rotation[,1], las=2, ylab="PC1 Contribution")
```

```{r}
res = as.data.frame(pca$rotation)
ggplot(res) + aes(PC1, reorder(row.names(res), PC1)) + geom_col()
```

> Q24. What original variables are picked up strongly by PC1 in the positive direction? Do these make sense to you? 

Fruity, hard, and pluribus are picked up strongly by PC1. Makes sense because these are generally correlated with fruity candy while the other stuff is more correlated to chocolate candy.